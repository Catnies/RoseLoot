import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java-library'
    id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'dev.rosewood'
version = '1.0.0-BETA-4'

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()

    maven { url = 'https://mvn.intellectualsites.com/content/repositories/thirdparty/' }
    maven { url = 'https://repo.rosewooddev.io/repository/public/' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot:1.17.1'
    compileOnly 'org.jetbrains:annotations:20.1.0'
    compileOnly 'com.github.milkbowl:vault:1.7.3'
    compileOnly 'org.black_ixx:playerpoints:3.0.3'
    compileOnly 'me.arcaniax:HeadDatabase-API:1.1.0', {
        exclude group: 'org.spigotmc'
    }

    api 'dev.rosewood:rosegarden:1.0.7'
}

shadowJar {
    archiveClassifier.set(null)
    minimize()

    relocate('dev.rosewood.rosegarden', 'dev.rosewood.roseloot.lib.rosegarden')
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'roseloot'
            pom {
                name = 'roseloot'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar
